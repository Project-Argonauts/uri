# ----------------------------------------------------------------------------------------
# uri (header only)
# Copyright (C) 2024 Fix8 Market Technologies Pty Ltd
#   by David L. Dight
# see https://github.com/fix8mt/uri
#
# Lightweight header-only C++20 URI parser
#
# Distributed under the Boost Software License, Version 1.0 August 17th, 2003
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#
# ----------------------------------------------------------------------------------------
# cmake config
#	clang
#		CXX="clang++" CC="clang" cmake ..
#	gcc
#		CXX="g++" CC="gcc" cmake ..
#
# min cmake version 3.20 (Mar 24, 2021)
# ----------------------------------------------------------------------------------------
cmake_minimum_required (VERSION 3.20)
project (uri
	LANGUAGES CXX
	HOMEPAGE_URL https://github.com/fix8mt/uri
	DESCRIPTION "Lightweight header-only C++20 URI parser"
	VERSION 2.3
)

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
link_libraries(Threads::Threads)
include_directories(${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR})

if(CMAKE_BUILD_TYPE STREQUAL "")
   set(CMAKE_BUILD_TYPE "RELEASE")
endif()
if (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
   set(CMAKE_CXX_FLAGS_DEBUG "-O0 -D_DEBUG -ggdb")
   set(CMAKE_C_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})
else(CMAKE_BUILD_TYPE STREQUAL "RELEASE")
   set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG -ggdb")
   set(CMAKE_C_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})
endif()
message("-- cxx flags ${CMAKE_BUILD_TYPE}: \"${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}\"")

set(exdir ${CMAKE_SOURCE_DIR}/examples)
file(GLOB esrc CONFIGURE_DEPENDS "${exdir}/uri*.cpp")
enable_testing()
foreach(x ${esrc})
	cmake_path(GET x STEM LAST_ONLY target)
	add_executable(${target} ${x})
	set_target_properties(${target} PROPERTIES CXX_STANDARD 20 CXX_STANDARD_REQUIRED true)
	get_target_property(v1 ${target} CXX_STANDARD)
   target_link_libraries(${target} PRIVATE Catch2::Catch2WithMain)
	cmake_path(GET x FILENAME fname)
	message("-- adding ${fname} cxx std: c++${v1}")
endforeach()

# to disable building unit tests:
# cmake -DBUILD_TESTS=false ..
option(BUILD_TESTS "enable building unit tests" true)
message("-- Build unit tests: ${BUILD_TESTS}")
if(BUILD_TESTS)
	message(STATUS "Populating Catch2...")
	include(FetchContent)
	enable_testing()
	FetchContent_Declare(Catch2
		GIT_REPOSITORY https://github.com/catchorg/Catch2.git
		GIT_SHALLOW	ON
		GIT_TAG devel
	)
	FetchContent_MakeAvailable(Catch2)
	list(APPEND CMAKE_MODULE_PATH ${catch2_SOURCE_DIR}/extras)
	include(Catch)
	catch_discover_tests(uritest2)

endif()

# to dump all non-empty cmake variables
# cmake -DCMAKE_DUMP_VARS=true ..
option(CMAKE_DUMP_VARS "dump all cmake vars" false)
if(CMAKE_DUMP_VARS)
	get_cmake_property(varname VARIABLES)
	foreach (var ${varname})
		if(NOT ${var} STREQUAL "")
			message(STATUS "${var}=${${var}}")
		endif()
	endforeach()
endif()
